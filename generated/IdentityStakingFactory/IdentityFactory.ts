// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogDeployed extends ethereum.Event {
  get params(): LogDeployed__Params {
    return new LogDeployed__Params(this);
  }
}

export class LogDeployed__Params {
  _event: LogDeployed;

  constructor(event: LogDeployed) {
    this._event = event;
  }

  get addr(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get salt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class IdentityFactory extends ethereum.SmartContract {
  static bind(address: Address): IdentityFactory {
    return new IdentityFactory("IdentityFactory", address);
  }

  creator(): Address {
    let result = super.call("creator", "creator():(address)", []);

    return result[0].toAddress();
  }

  try_creator(): ethereum.CallResult<Address> {
    let result = super.tryCall("creator", "creator():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DeployCall extends ethereum.Call {
  get inputs(): DeployCall__Inputs {
    return new DeployCall__Inputs(this);
  }

  get outputs(): DeployCall__Outputs {
    return new DeployCall__Outputs(this);
  }
}

export class DeployCall__Inputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }

  get code(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get salt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DeployCall__Outputs {
  _call: DeployCall;

  constructor(call: DeployCall) {
    this._call = call;
  }
}

export class DeployAndExecuteCall extends ethereum.Call {
  get inputs(): DeployAndExecuteCall__Inputs {
    return new DeployAndExecuteCall__Inputs(this);
  }

  get outputs(): DeployAndExecuteCall__Outputs {
    return new DeployAndExecuteCall__Outputs(this);
  }
}

export class DeployAndExecuteCall__Inputs {
  _call: DeployAndExecuteCall;

  constructor(call: DeployAndExecuteCall) {
    this._call = call;
  }

  get code(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get salt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get txns(): Array<DeployAndExecuteCallTxnsStruct> {
    return this._call.inputValues[2].value.toTupleArray<
      DeployAndExecuteCallTxnsStruct
    >();
  }

  get signatures(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class DeployAndExecuteCall__Outputs {
  _call: DeployAndExecuteCall;

  constructor(call: DeployAndExecuteCall) {
    this._call = call;
  }
}

export class DeployAndExecuteCallTxnsStruct extends ethereum.Tuple {
  get identityContract(): Address {
    return this[0].toAddress();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get feeTokenAddr(): Address {
    return this[2].toAddress();
  }

  get feeAmount(): BigInt {
    return this[3].toBigInt();
  }

  get to(): Address {
    return this[4].toAddress();
  }

  get value(): BigInt {
    return this[5].toBigInt();
  }

  get data(): Bytes {
    return this[6].toBytes();
  }
}

export class DeployAndRoutinesCall extends ethereum.Call {
  get inputs(): DeployAndRoutinesCall__Inputs {
    return new DeployAndRoutinesCall__Inputs(this);
  }

  get outputs(): DeployAndRoutinesCall__Outputs {
    return new DeployAndRoutinesCall__Outputs(this);
  }
}

export class DeployAndRoutinesCall__Inputs {
  _call: DeployAndRoutinesCall;

  constructor(call: DeployAndRoutinesCall) {
    this._call = call;
  }

  get code(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get salt(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get auth(): DeployAndRoutinesCallAuthStruct {
    return this._call.inputValues[2].value.toTuple() as DeployAndRoutinesCallAuthStruct;
  }

  get operations(): Array<DeployAndRoutinesCallOperationsStruct> {
    return this._call.inputValues[3].value.toTupleArray<
      DeployAndRoutinesCallOperationsStruct
    >();
  }
}

export class DeployAndRoutinesCall__Outputs {
  _call: DeployAndRoutinesCall;

  constructor(call: DeployAndRoutinesCall) {
    this._call = call;
  }
}

export class DeployAndRoutinesCallAuthStruct extends ethereum.Tuple {
  get relayer(): Address {
    return this[0].toAddress();
  }

  get outpace(): Address {
    return this[1].toAddress();
  }

  get validUntil(): BigInt {
    return this[2].toBigInt();
  }

  get feeTokenAddr(): Address {
    return this[3].toAddress();
  }

  get weeklyFeeAmount(): BigInt {
    return this[4].toBigInt();
  }
}

export class DeployAndRoutinesCallOperationsStruct extends ethereum.Tuple {
  get mode(): i32 {
    return this[0].toI32();
  }

  get data(): Bytes {
    return this[1].toBytes();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get tokenAddr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
